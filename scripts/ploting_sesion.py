# coding: utf-8
import numpy as np
import matplotlib.pyplot as plt
# Printing final comp ratios for different classsifiers
c_ratio_log = np.loadtxt('../plots/mlp/results/comp_train_mlp_ratio.txt')
c_ratio_svr = np.loadtxt('../plots/logistic/results/comp_train_logistic_ratio.txt')
c_ratio_svc = np.loadtxt('../plots/bdt/results/comp_train_bdt_ratio.txt')
c_ratio = np.loadtxt('../plots/mlp/results/full_truth_mlp_ratio.txt')
x = np.linspace(0,5,100)
log = plt.plot(x, c_ratio_log, label='MLP')
svr = plt.plot(x, c_ratio_svr, label='Logistic')
svc = plt.plot(x, c_ratio_svc, label='BDT')
ratio = plt.plot(x, c_ratio, label='Ratio')
plt.xlabel('x')
plt.ylabel('LR')
plt.legend()
plt.savefig('../plots/comp_train_all_ratio.png')
c_diff_log = np.loadtxt('../plots/mlp/results/comp_train_mlp_diff.txt')
c_diff_svr = np.loadtxt('../plots/logistic/results/comp_train_logistic_diff.txt')
c_diff_svc = np.loadtxt('../plots/bdt/results/comp_train_bdt_diff.txt')
plt.clf()
log_dif = plt.plot(x, c_diff_log, label='MLP')
svr_dif = plt.plot(x, c_diff_svr, label='Logistic')
svc_dif = plt.plot(x, c_diff_svc, label='BDT')
plt.xlabel('x')
plt.ylabel('differences')
plt.legend()
plt.savefig('../plots/comp_train_all_diff.png')
plt.clf()
# Ratios for mlp
# full-truth to full-train to composed-train comparison
c_full_log = np.loadtxt('../plots/mlp/results/full_train_mlp_ratio.txt')
log = plt.plot(x, c_ratio_log, label='Composite train')
full = plt.plot(x, c_full_log, label='Full train')
ratio = plt.plot(x, c_ratio, label='Full truth')
plt.xlabel('x')
plt.ylabel('LR')
plt.title('Likelihood ratios for MLP')
plt.legend()
plt.savefig('../plots/full_comparison_mlp_ratio.png')
plt.clf()
c_full_diff = np.loadtxt('../plots/mlp/results/full_train_mlp_diff.txt')
plt.plot(x, c_full_diff, label="Full")
plt.plot(x, c_diff_log, label="Composite")
plt.xlabel('x')
plt.ylabel('difference')
plt.legend()
plt.title('Differences to truth ratio for MLP')
plt.savefig('../plots/full_comparison_mlp_diff.png')
plt.clf()
# ROC curves comparison
roc_comp = np.loadtxt('../plots/mlp/results/comp_train_mlp_sigbkg.txt')
roc_full = np.loadtxt('../plots/mlp/results/full_train_mlp_sigbkg.txt')
roc_truth = np.loadtxt('../plots/mlp/results/full_truth_mlp_sigbkg.txt')
from sklearn.metrics import roc_curve, auc
roc_comp_auc = auc(roc_comp[:,1],1.-roc_comp[:,0])
roc_full_auc = auc(roc_full[:,1],1.-roc_full[:,0])
roc_truth_auc = auc(roc_truth[:,1],1.-roc_truth[:,0])
plt.figure()
plt.plot(roc_comp[:,1], 1.-roc_comp[:,0], label='Sig eff Bkg rej comp (area = %0.2f)' % roc_comp_auc)
plt.plot(roc_full[:,1], 1.-roc_full[:,0], label='Sig eff Bkg rej full train (area = %0.2f)' % roc_full_auc)
plt.plot(roc_truth[:,1],1.-roc_truth[:,0], label='Sig eff Bkg rej full truth (area = %0.2f)' % roc_truth_auc)
plt.xlim([0.0, 1.0])
plt.ylim([0.0, 1.05])
plt.xlabel('Signal Efficiency')
plt.ylabel('Background Rejection')
plt.title('Signal eff-Background rej curves Likelihood ratios of mlp')
plt.legend(loc="lower right")
plt.savefig('../plots/full_comparison_mlp_sigbkg.png')
plt.clf()
# Multiple plot for all pair-wise ratios
c_f1_f0_train = np.loadtxt('../plots/mlp/results/dec_train_f1_f0_mlp_ratio_trained.txt')
c_f1_f0_truth = np.loadtxt('../plots/mlp/results/dec_train_f1_f0_mlp_ratio_truth.txt')
c_f2_f0_train = np.loadtxt('../plots/mlp/results/dec_train_f2_f0_mlp_ratio_trained.txt')
c_f2_f0_truth = np.loadtxt('../plots/mlp/results/dec_train_f2_f0_mlp_ratio_truth.txt')
c_f2_f1_train = np.loadtxt('../plots/mlp/results/dec_train_f2_f1_mlp_ratio_trained.txt')
c_f2_f1_truth = np.loadtxt('../plots/mlp/results/dec_train_f2_f1_mlp_ratio_truth.txt')
plt.subplot(311)
plt.plot(x, c_f1_f0_train, label="Trained")
plt.plot(x, c_f1_f0_truth, label="Truth")
plt.xlabel('x')
plt.ylabel('LR')
plt.title('Ratio f1-f0')
plt.legend()
plt.subplot(312)
plt.plot(x, c_f2_f0_train, label="Trained")
plt.plot(x, c_f2_f0_truth, label="Truth")
plt.xlabel('x')
plt.ylabel('LR')
plt.title('Ratio f2-f0')
plt.legend()
plt.subplot(313)
plt.plot(x, c_f2_f1_train, label="Trained")
plt.plot(x, c_f2_f1_truth, label="Truth")
plt.xlabel('x')
plt.ylabel('LR')
plt.title('Ratio f2-f1')
plt.legend()
plt.savefig('../plots/dec_comparison_mlp_ratio.png')
plt.clf()
# Multiple plot for all pair-wise ROC
c_f1_f0_train_roc = np.loadtxt('../plots/mlp/results/dec_train_f1_f0_mlp_roc.txt')
c_f1_f0_truth_roc = np.loadtxt('../plots/mlp/results/dec_truth_f1_f0_mlp_roc.txt')
c_f2_f0_train_roc = np.loadtxt('../plots/mlp/results/dec_train_f2_f0_mlp_roc.txt')
c_f2_f0_truth_roc = np.loadtxt('../plots/mlp/results/dec_truth_f2_f0_mlp_roc.txt')
c_f2_f1_train_roc = np.loadtxt('../plots/mlp/results/dec_train_f2_f1_mlp_roc.txt')
c_f2_f1_truth_roc = np.loadtxt('../plots/mlp/results/dec_truth_f2_f1_mlp_roc.txt')
roc_f1_f0_train_auc = auc(c_f1_f0_train_roc[:,0],c_f1_f0_train_roc[:,1])
roc_f1_f0_truth_auc = auc(c_f1_f0_truth_roc[:,0],c_f1_f0_truth_roc[:,1])
roc_f2_f0_train_auc = auc(c_f2_f0_train_roc[:,0],c_f2_f0_train_roc[:,1])
roc_f2_f0_truth_auc = auc(c_f2_f0_truth_roc[:,0],c_f2_f0_truth_roc[:,1])
roc_f2_f1_train_auc = auc(c_f2_f1_train_roc[:,0],c_f2_f1_train_roc[:,1])
roc_f2_f1_truth_auc = auc(c_f2_f1_truth_roc[:,0],c_f2_f1_truth_roc[:,1])

plt.subplot(311)
plt.plot(c_f1_f0_train_roc[:,0], c_f1_f0_train_roc[:,1], label='ROC f1-f0 train (area = %0.2f)' % roc_f1_f0_train_auc)
plt.plot(c_f1_f0_truth_roc[:,0], c_f1_f0_truth_roc[:,1], label='ROC f1-f0 truth (area = %0.2f)' % roc_f1_f0_truth_auc)
plt.plot([0, 1], [0, 1], 'k--')
plt.xlim([0.0, 1.0])
plt.ylim([0.0, 1.05])
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('ROC curves for Likelihood ratios of f1-f0')
plt.legend(loc="lower right")

plt.subplot(312)
plt.plot(c_f2_f0_train_roc[:,0], c_f2_f0_train_roc[:,1], label='ROC f2-f0 train (area = %0.2f)' % roc_f2_f0_train_auc)
plt.plot(c_f2_f0_truth_roc[:,0], c_f2_f0_truth_roc[:,1], label='ROC f2-f0 truth (area = %0.2f)' % roc_f2_f0_truth_auc)
plt.plot([0, 1], [0, 1], 'k--')
plt.xlim([0.0, 1.0])
plt.ylim([0.0, 1.05])
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('ROC curves for Likelihood ratios of f2-f0')
plt.legend(loc="lower right")

plt.subplot(313)
plt.plot(c_f2_f1_train_roc[:,0], c_f2_f1_train_roc[:,1], label='ROC f2-f1 train (area = %0.2f)' % roc_f2_f1_train_auc)
plt.plot(c_f2_f1_truth_roc[:,0], c_f2_f1_truth_roc[:,1], label='ROC f2-f1 truth (area = %0.2f)' % roc_f2_f1_truth_auc)
plt.plot([0, 1], [0, 1], 'k--')
plt.xlim([0.0, 1.0])
plt.ylim([0.0, 1.05])
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('ROC curves for Likelihood ratios of f2-f1')
plt.legend(loc="lower right")
plt.savefig('../plots/dec_comparison_mlp_roc.png')
