# coding: utf-8
import numpy as np
import matplotlib.pyplot as plt
# Printing final composite ratios for different classsifiers
c_ratio_log = np.loadtxt('../plots/logistic/composite_trained_logistic_ratio.txt')
c_ratio_svr = np.loadtxt('../plots/svr/composite_trained_svr_ratio.txt')
c_ratio_svc = np.loadtxt('../plots/svc/composite_trained_svc_ratio.txt')
c_ratio = np.loadtxt('../plots/logistic/full_truth_logistic_ratio.txt')
x = np.linspace(0,5,100)
log = plt.plot(x, c_ratio_log, label='Logistic')
svr = plt.plot(x, c_ratio_svr, label='SVR')
svc = plt.plot(x, c_ratio_svc, label='SVC')
ratio = plt.plot(x, c_ratio, label='Ratio')
plt.xlabel('x')
plt.ylabel('LR')
plt.legend()
plt.savefig('../plots/composite_trained_all_ratio.png')
c_diff_log = np.loadtxt('../plots/logistic/composite_trained_logistic_diff.txt')
c_diff_svr = np.loadtxt('../plots/svr/composite_trained_svr_diff.txt')
c_diff_svc = np.loadtxt('../plots/svc/composite_trained_svc_diff.txt')
plt.clf()
log_dif = plt.plot(x, c_diff_log, label='Logistic')
svr_dif = plt.plot(x, c_diff_svr, label='SVR')
svc_dif = plt.plot(x, c_diff_svc, label='SVC')
plt.xlabel('x')
plt.ylabel('differences')
plt.legend()
plt.savefig('../plots/composite_trained_all_diff.png')
plt.clf()
# Ratios for logistic
# full-truth to full-trained to composed-trained comparison
c_full_log = np.loadtxt('../plots/logistic/full_trained_logistic_ratio.txt')
log = plt.plot(x, c_ratio_log, label='Composite trained')
full = plt.plot(x, c_full_log, label='Full trained')
ratio = plt.plot(x, c_ratio, label='Full truth')
plt.xlabel('x')
plt.ylabel('LR')
plt.title('Likelihood ratios for Logistic')
plt.legend()
plt.savefig('../plots/full_comparison_logistic_ratio.png')
plt.clf()
c_full_diff = np.loadtxt('../plots/logistic/full_trained_logistic_diff.txt')
plt.plot(x, c_full_diff, label="Full")
plt.plot(x, c_diff_log, label="Composite")
plt.xlabel('x')
plt.ylabel('difference')
plt.legend()
plt.title('Differences to truth ratio for Logistic')
plt.savefig('../plots/full_comparison_logistic_diff.png')
plt.clf()
# ROC curves comparison
roc_composite = np.loadtxt('../plots/logistic/composite_trained_logistic_roc.txt')
roc_full = np.loadtxt('../plots/logistic/full_trained_logistic_roc.txt')
roc_truth = np.loadtxt('../plots/logistic/full_truth_logistic_roc.txt')
from sklearn.metrics import roc_curve, auc
roc_composite_auc = auc(roc_composite[:,0],roc_composite[:,1])
roc_full_auc = auc(roc_full[:,0],roc_full[:,1])
roc_truth_auc = auc(roc_truth[:,0],roc_truth[:,1])
plt.figure()
plt.plot(roc_composite[:,0], roc_composite[:,1], label='ROC composite (area = %0.2f)' % roc_composite_auc)
plt.plot(roc_full[:,0], roc_full[:,1], label='ROC full trained (area = %0.2f)' % roc_full_auc)
plt.plot(roc_truth[:,0], roc_truth[:,1], label='ROC full truth (area = %0.2f)' % roc_truth_auc)
plt.plot([0, 1], [0, 1], 'k--')
plt.xlim([0.0, 1.0])
plt.ylim([0.0, 1.05])
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('ROC curves for Likelihood ratios of logistic')
plt.legend(loc="lower right")
plt.savefig('../plots/full_comparison_logistic_roc.png')
plt.clf()
# Multiple plot for all ratios
c_f1_f0_train = np.loadtxt('../plots/logistic/decomposed_trained_f1_f0_logistic_ratio_trained.txt')
c_f1_f0_truth = np.loadtxt('../plots/logistic/decomposed_trained_f1_f0_logistic_ratio_truth.txt')
c_f2_f0_train = np.loadtxt('../plots/logistic/decomposed_trained_f2_f0_logistic_ratio_trained.txt')
c_f2_f0_truth = np.loadtxt('../plots/logistic/decomposed_trained_f2_f0_logistic_ratio_truth.txt')
c_f2_f1_train = np.loadtxt('../plots/logistic/decomposed_trained_f2_f1_logistic_ratio_trained.txt')
c_f2_f1_truth = np.loadtxt('../plots/logistic/decomposed_trained_f2_f1_logistic_ratio_truth.txt')
plt.subplot(311)
plt.plot(x, c_f1_f0_train, label="Trained")
plt.plot(x, c_f1_f0_truth, label="Truth")
plt.xlabel('x')
plt.ylabel('LR')
plt.title('Ratio f1-f0')
plt.legend()
plt.subplot(312)
plt.plot(x, c_f2_f0_train, label="Trained")
plt.plot(x, c_f2_f0_truth, label="Truth")
plt.xlabel('x')
plt.ylabel('LR')
plt.title('Ratio f2-f0')
plt.legend()
plt.subplot(313)
plt.plot(x, c_f2_f1_train, label="Trained")
plt.plot(x, c_f2_f1_truth, label="Truth")
plt.xlabel('x')
plt.ylabel('LR')
plt.title('Ratio f2-f1')
plt.legend()
plt.savefig('../plots/decomposed_comparison_logistic_ratio.png')
